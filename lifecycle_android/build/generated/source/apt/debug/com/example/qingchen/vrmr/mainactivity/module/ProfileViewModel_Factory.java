// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.qingchen.vrmr.mainactivity.module;

import com.example.qingchen.vrmr.mainactivity.repository.InfoRepository;
import dagger.MembersInjector;
import dagger.internal.Factory;
import dagger.internal.MembersInjectors;
import javax.inject.Provider;

public final class ProfileViewModel_Factory implements Factory<ProfileViewModel> {
  private final MembersInjector<ProfileViewModel> profileViewModelMembersInjector;

  private final Provider<InfoRepository> infoRepositoryProvider;

  public ProfileViewModel_Factory(
      MembersInjector<ProfileViewModel> profileViewModelMembersInjector,
      Provider<InfoRepository> infoRepositoryProvider) {
    assert profileViewModelMembersInjector != null;
    this.profileViewModelMembersInjector = profileViewModelMembersInjector;
    assert infoRepositoryProvider != null;
    this.infoRepositoryProvider = infoRepositoryProvider;
  }

  @Override
  public ProfileViewModel get() {
    return MembersInjectors.injectMembers(
        profileViewModelMembersInjector, new ProfileViewModel(infoRepositoryProvider.get()));
  }

  public static Factory<ProfileViewModel> create(
      MembersInjector<ProfileViewModel> profileViewModelMembersInjector,
      Provider<InfoRepository> infoRepositoryProvider) {
    return new ProfileViewModel_Factory(profileViewModelMembersInjector, infoRepositoryProvider);
  }
}
